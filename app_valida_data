package br.com.santana.marcio.verificadata;
import android.app.DatePickerDialog;
import android.graphics.Color;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.TimePicker;
import android.widget.Toast;

import org.joda.time.DateTime;
import org.joda.time.Days;

import java.util.Calendar;





public class MainActivity extends AppCompatActivity implements
        View.OnClickListener {


    private Button botao, botao1, botao2, botao3;
    private EditText exibidata;
    private int mYear, mMonth, mDay, mYear1, mMonth1, mDay1, mYear2, mMonth2, mDay2, mYear3, mMonth3, mDay3;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        botao = (Button) findViewById(R.id.button_teste);
        botao1 = (Button) findViewById(R.id.button_teste2);
        botao2 = (Button) findViewById(R.id.button_teste3);
        botao3 = (Button) findViewById(R.id.button2_teste4);
        exibidata = (EditText) findViewById(R.id.editText_teste);


        botao.setOnClickListener(this);
        botao1.setOnClickListener(this);
        botao2.setOnClickListener(this);
        botao3.setOnClickListener(this);


    }

    @Override
    public void onClick(View v) {

        if (v == botao) {

            // Get Current Date
            final Calendar c = Calendar.getInstance();
            mYear = c.get(Calendar.YEAR);
            mMonth = c.get(Calendar.MONTH);
            mDay = c.get(Calendar.DAY_OF_MONTH);


            final DatePickerDialog datePickerDialog = new DatePickerDialog(this,
                    new DatePickerDialog.OnDateSetListener() {

                        @Override
                        public void onDateSet(DatePicker view, int year,
                                              int monthOfYear, int dayOfMonth) {


                            mYear1 = year;
                            mMonth1 = monthOfYear + 1;
                            mDay1 = dayOfMonth;


                        }
                    }, mYear, mMonth, mDay);
            datePickerDialog.show();


        }

        if (v == botao1) {

            // Get Current Date
            final Calendar c = Calendar.getInstance();
            mYear = c.get(Calendar.YEAR);
            mMonth = c.get(Calendar.MONTH);
            mDay = c.get(Calendar.DAY_OF_MONTH);


            DatePickerDialog datePickerDialog = new DatePickerDialog(this,
                    new DatePickerDialog.OnDateSetListener() {

                        @Override
                        public void onDateSet(DatePicker view, int year,
                                              int monthOfYear, int dayOfMonth) {

                            //  exibidata.setText(dayOfMonth + "-" + (monthOfYear + 1) + "-" + year);

                            mYear2 = year;
                            mMonth2 = monthOfYear + 1;
                            mDay2 = dayOfMonth;


                        }
                    }, mYear, mMonth, mDay);
            datePickerDialog.show();


        }

        if (v == botao3) {

            // Get Current Date
            final Calendar c = Calendar.getInstance();
            mYear = c.get(Calendar.YEAR);
            mMonth = c.get(Calendar.MONTH);
            mDay = c.get(Calendar.DAY_OF_MONTH);


            DatePickerDialog datePickerDialog = new DatePickerDialog(this,
                    new DatePickerDialog.OnDateSetListener() {

                        @Override
                        public void onDateSet(DatePicker view, int year,
                                              int monthOfYear, int dayOfMonth) {

                            //  exibidata.setText(dayOfMonth + "-" + (monthOfYear + 1) + "-" + year);

                            mYear3 = year;
                            mMonth3 = monthOfYear + 1;
                            mDay3 = dayOfMonth;

                            //   dataValidade = new DateTime(mYear1,mMonth1,mDay1,0,0);

                        }
                    }, mYear, mMonth, mDay);
            datePickerDialog.show();


        }


        if (v == botao2) {

            if (mDay1 > 0 && mMonth1 > 0 && mYear1 > 0) {

                if (mDay2 > 0 && mMonth2 > 0 && mYear2 > 0) {

                    if (mDay3 > 0 && mMonth3 > 0 && mYear3 > 0) {

                        DateTime dataproducao = new DateTime(mYear1, mMonth1, mDay1, 0, 0);
                        DateTime datavalidade = new DateTime(mYear2, mMonth2, mDay2, 0, 0);
                        Days days = Days.daysBetween(dataproducao, datavalidade);
                        int saida = days.getDays();
                        //String saida_final = String.valueOf(saida);
                        DateTime data_atual = new DateTime(mYear3, mMonth3, mDay3, 0, 0);
                        Days days1 = Days.daysBetween(dataproducao, data_atual);
                        int atual = days1.getDays();
                        if (saida > atual) {
                            int total = (saida - atual) * 100;
                            total = total / saida;
                            String saida_final = String.valueOf(total);

                            if (total < 50) {

                                exibidata.setTextColor(Color.RED);
                                exibidata.setText(saida_final + " " + "%");

                            } else {

                                exibidata.setTextColor(Color.GREEN);
                                exibidata.setText(saida_final + " " + "%");

                            }

                        } else{

                            Toast.makeText(this, "Atenção!!! Data de Produção Menor que Data de Validade ou Produto esta Vencido Verique as Datas", Toast.LENGTH_LONG).show();

                        }

                    } else {


                        Toast.makeText(this, "Atenção!!! Favor Informar a Data Atual", Toast.LENGTH_LONG).show();

                    }

                } else {

                    Toast.makeText(this, "Atenção!!! Favor Informar a Data de Validade", Toast.LENGTH_LONG).show();
                }
            } else {

                Toast.makeText(this, "Atenção!!! Favor Informar a Data de Produção", Toast.LENGTH_LONG).show();

            }


        }

    }

}
